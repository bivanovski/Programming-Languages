interface Two_D_Shape {
	
	static double  PI = 3.14;
	
	public void parameters(double sideA, double sideB, double sideC);
	public double area(double sideA, double sideB, double sideC);
	public double perimeter(double sideA, double sideB, double sideC);
}

interface Three_D_Shape {
	public double volume(double sideA, double sideB, double sideC);
}

class Triangle implements Two_D_Shape {
	double sideA;
	double sideB;
	double sideC;
	double height;
	
	Triangle(double sideA, double sideB, double sideC, double height)
	{
		this.sideA = sideA;
		this.sideB = sideB;
		this.sideC = sideC;
		this.height = height;
		
		System.out.println("A new triangle is created");
	}
	
	boolean rectangular(double sideA, double sideB, double sideC)
	{
		return Math.pow(sideA, 2) + Math.pow(sideB, 2) == Math.pow(sideC, 2);
	}

	@Override
	public void parameters(double sideA, double sideB, double sideC) {
		System.out.println("Side A: " + sideA);
		System.out.println("Side B: " + sideB);
		System.out.println("Side C: " + sideC);
		
	}

	@Override
	public double area(double sideA, double sideB, double sideC) {
		
		return (double) (sideA*sideB*sideC);
	}

	@Override
	public double perimeter(double sideA, double sideB, double sideC) {
		return sideA+sideB+sideC;
	}
}

class Sphere implements Two_D_Shape, Three_D_Shape {

	
	double radius;
	
	Sphere(double radius)
	{
		this.radius = radius;
		System.out.println("A new sphere has been created");
	}
	
	@Override
	public double volume(double sideA, double sideB, double sideC) {
		return (double) (sideA*sideB*sideC);
	}

	@Override
	public void parameters(double sideA, double sideB, double sideC) {
		System.out.println("Side A: " + sideA);
		System.out.println("Side B: " + sideB);
		System.out.println("Side C: " + sideC);
		
		
	}

	@Override
	public double area(double sideA, double sideB, double sideC) {
		return (double) (sideA*sideB*sideC);
	}

	@Override
	public double perimeter(double sideA, double sideB, double sideC) {
		return sideA+sideB+sideC;
	}
	
}

public class Ex1 {

	public static void main(String[] args) {
		Triangle T1 = new Triangle(3,5,6,3);
		Sphere B1=new Sphere(4);
		Two_D_Shape T2=new Triangle(8,2,10,16);
		Two_D_Shape B2=new Sphere(3);
		Three_D_Shape B3=new Sphere(7);
		
		System.out.println("Is it rectangular: " + T1.rectangular(3,5,6));
		
		int countT = 0;
		
		if(T1 instanceof Two_D_Shape)
		{
			countT++;
		}
		
		if(T2 instanceof Two_D_Shape)
		{
			countT++;
		}
		
		if(B2 instanceof Two_D_Shape)
		{
			countT++;
		}
		
		System.out.println("There are " + countT + " 2D shapes");
		

	}

}
